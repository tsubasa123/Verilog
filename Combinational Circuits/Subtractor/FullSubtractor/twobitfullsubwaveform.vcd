$date
	Mon Apr 13 21:21:09 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module twobitfullsubTB $end
$var wire 1 ! Borrowout $end
$var wire 2 " Diff [1:0] $end
$var reg 2 # A [1:0] $end
$var reg 2 $ B [1:0] $end
$var reg 1 % BorrowIn $end
$scope module DUT $end
$var wire 2 & A [1:0] $end
$var wire 2 ' B [1:0] $end
$var wire 1 ( BorrowIn $end
$var wire 1 ! Borrowout $end
$var wire 2 ) Diff [1:0] $end
$var wire 1 * borrow $end
$scope module fs1 $end
$var wire 1 + A $end
$var wire 1 , B $end
$var wire 1 ( BorrowIn $end
$var wire 1 * BorrowOut $end
$var wire 1 - Diff $end
$var wire 1 . Diff1 $end
$var wire 1 / borrow1 $end
$var wire 1 0 borrow2 $end
$scope module hs1 $end
$var wire 1 + A $end
$var wire 1 , B $end
$var reg 1 1 Borrow $end
$var reg 1 2 Diff $end
$upscope $end
$scope module hs2 $end
$var wire 1 . A $end
$var wire 1 ( B $end
$var reg 1 3 Borrow $end
$var reg 1 4 Diff $end
$upscope $end
$upscope $end
$scope module fs2 $end
$var wire 1 5 A $end
$var wire 1 6 B $end
$var wire 1 * BorrowIn $end
$var wire 1 ! BorrowOut $end
$var wire 1 7 Diff $end
$var wire 1 8 Diff1 $end
$var wire 1 9 borrow1 $end
$var wire 1 : borrow2 $end
$scope module hs1 $end
$var wire 1 5 A $end
$var wire 1 6 B $end
$var reg 1 ; Borrow $end
$var reg 1 < Diff $end
$upscope $end
$scope module hs2 $end
$var wire 1 8 A $end
$var wire 1 * B $end
$var reg 1 = Borrow $end
$var reg 1 > Diff $end
$upscope $end
$upscope $end
$upscope $end
$scope task initialize $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
b0 )
0(
b0 '
b0 &
0%
b0 $
b0 #
b0 "
0!
$end
#10
1!
1=
1:
1>
17
1*
13
10
14
1-
b11 "
b11 )
1%
1(
#15
11
1/
12
1.
03
00
14
1-
b11 "
b11 )
1,
0%
0(
b1 $
b1 '
#20
04
0-
b10 "
b10 )
1%
1(
#25
0=
0:
1>
17
0*
01
0/
02
0.
1;
19
1<
18
04
0-
b10 "
b10 )
0,
16
0%
0(
b10 $
b10 '
#30
0>
07
1*
13
10
14
1-
b1 "
b1 )
1%
1(
#35
11
1/
12
1.
03
00
14
1-
b1 "
b1 )
1,
0%
0(
b11 $
b11 '
#40
04
0-
b0 "
b0 )
1%
1(
#45
0!
0*
0;
09
0<
08
01
0/
14
1-
b1 "
b1 )
0,
06
1+
0%
0(
b0 $
b0 '
b1 #
b1 &
#50
04
0-
b0 "
b0 )
1%
1(
#55
02
0.
04
0-
b0 "
b0 )
1,
0%
0(
b1 $
b1 '
#60
1!
1=
1:
1>
17
1*
13
10
14
1-
b11 "
b11 )
1%
1(
#65
0=
0:
0*
12
1.
1;
19
1<
18
03
00
14
1-
b11 "
b11 )
0,
16
0%
0(
b10 $
b10 '
#70
04
0-
b10 "
b10 )
1%
1(
#75
02
0.
04
0-
b10 "
b10 )
1,
0%
0(
b11 $
b11 '
#80
0>
07
1*
13
10
14
1-
b1 "
b1 )
1%
1(
#85
1>
17
0!
0*
0;
09
03
00
04
0-
b10 "
b10 )
0,
06
0+
15
0%
0(
b0 $
b0 '
b10 #
b10 &
#90
0>
07
1*
13
10
14
1-
b1 "
b1 )
1%
1(
#95
11
1/
12
1.
03
00
14
1-
b1 "
b1 )
1,
0%
0(
b1 $
b1 '
#100
04
0-
b0 "
b0 )
1%
1(
#105
0=
0:
0>
07
0*
01
0/
02
0.
0<
08
04
0-
b0 "
b0 )
0,
16
0%
0(
b10 $
b10 '
#110
1!
1=
1:
1>
17
1*
13
10
14
1-
b11 "
b11 )
1%
1(
#115
11
1/
12
1.
03
00
14
1-
b11 "
b11 )
1,
0%
0(
b11 $
b11 '
#120
04
0-
b10 "
b10 )
1%
1(
#125
0!
0=
0:
0*
1<
18
01
0/
14
1-
b11 "
b11 )
0,
06
1+
0%
0(
b0 $
b0 '
b11 #
b11 &
#130
04
0-
b10 "
b10 )
1%
1(
#135
02
0.
04
0-
b10 "
b10 )
1,
0%
0(
b1 $
b1 '
#140
0>
07
1*
13
10
14
1-
b1 "
b1 )
1%
1(
#145
0*
12
1.
0<
08
03
00
14
1-
b1 "
b1 )
0,
16
0%
0(
b10 $
b10 '
#150
04
0-
b0 "
b0 )
1%
1(
#155
02
0.
04
0-
b0 "
b0 )
1,
0%
0(
b11 $
b11 '
#160
1!
1=
1:
1>
17
1*
13
10
14
1-
b11 "
b11 )
1%
1(
#165
