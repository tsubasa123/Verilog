$date
	Sun Apr 12 02:25:24 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module twobitFullAdderTB $end
$var wire 1 ! CarryOut $end
$var wire 2 " Sum [1:0] $end
$var reg 2 # A [1:0] $end
$var reg 2 $ B [1:0] $end
$var reg 1 % CarryIn $end
$scope module DUT $end
$var wire 2 & A [1:0] $end
$var wire 2 ' B [1:0] $end
$var wire 1 ( CarryIn $end
$var wire 1 ! CarryOut $end
$var wire 2 ) Sum [1:0] $end
$var wire 1 * carry $end
$scope module add1 $end
$var wire 1 + A $end
$var wire 1 , B $end
$var wire 1 ( CarryIn $end
$var wire 1 * CarryOut $end
$var wire 1 - Sum $end
$var wire 1 . c1 $end
$var wire 1 / c2 $end
$var wire 1 0 s1 $end
$scope module ha1 $end
$var wire 1 + A $end
$var wire 1 , B $end
$var reg 1 1 Carry $end
$var reg 1 2 Sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 0 A $end
$var wire 1 ( B $end
$var reg 1 3 Carry $end
$var reg 1 4 Sum $end
$upscope $end
$upscope $end
$scope module add2 $end
$var wire 1 5 A $end
$var wire 1 6 B $end
$var wire 1 * CarryIn $end
$var wire 1 ! CarryOut $end
$var wire 1 7 Sum $end
$var wire 1 8 c1 $end
$var wire 1 9 c2 $end
$var wire 1 : s1 $end
$scope module ha1 $end
$var wire 1 5 A $end
$var wire 1 6 B $end
$var reg 1 ; Carry $end
$var reg 1 < Sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 : A $end
$var wire 1 * B $end
$var reg 1 = Carry $end
$var reg 1 > Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope task init $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1>
0=
0<
1;
0:
09
18
17
16
15
14
03
02
11
00
0/
1.
1-
1,
1+
1*
b11 )
1(
b11 '
b11 &
1%
b11 $
b11 #
b11 "
1!
$end
#5
1=
19
0>
07
1!
0;
08
1<
1:
04
0-
b0 "
b0 )
05
0%
0(
b1 #
b1 &
#10
0=
09
1>
17
b10 "
b10 )
1;
18
0<
0:
15
b11 #
b11 &
#15
14
1-
0=
09
1>
17
b11 "
b11 )
0*
0!
01
0.
12
10
0;
08
1<
1:
0,
05
b10 $
b10 '
b1 #
b1 &
#20
0!
0=
09
1>
17
0*
02
00
03
0/
14
1-
b11 "
b11 )
06
0+
15
1%
1(
b0 $
b0 '
b10 #
b10 &
#25
1!
1=
19
0>
07
1*
13
1/
04
0-
b0 "
b0 )
12
10
16
1+
05
b10 $
b10 '
b1 #
b1 &
#30
0!
0=
09
0*
0<
0:
02
00
03
0/
04
0-
b0 "
b0 )
06
0+
0%
0(
b0 $
b0 '
b0 #
b0 &
#35
14
1-
b1 "
b1 )
1!
12
10
1;
18
1,
16
15
b11 $
b11 '
b10 #
b10 &
#40
