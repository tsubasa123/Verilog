$date
	Mon Apr 27 13:25:57 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module onebitadderTB $end
$var wire 1 ! CarryOut $end
$var wire 1 " Sum $end
$var reg 1 # A $end
$var reg 1 $ B $end
$var reg 1 % CarryIn $end
$scope module DUT $end
$var wire 1 & A $end
$var wire 1 ' B $end
$var wire 1 ( CarryIn $end
$var wire 1 ! CarryOut $end
$var wire 1 " Sum $end
$var wire 1 ) c1 $end
$var wire 1 * c2 $end
$var wire 1 + s1 $end
$scope module ha1 $end
$var wire 1 & A $end
$var wire 1 ' B $end
$var reg 1 , Carry $end
$var reg 1 - Sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 + A $end
$var wire 1 ( B $end
$var reg 1 . Carry $end
$var reg 1 / Sum $end
$upscope $end
$upscope $end
$scope task init $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
$end
#10
1/
1"
1%
1(
#15
1/
1"
1-
1+
0%
0(
1$
1'
#20
1!
1.
1*
0/
0"
1%
1(
#25
0!
0.
0*
1/
1"
0%
0(
0$
0'
1#
1&
#30
1!
1.
1*
0/
0"
1%
1(
#35
0.
0*
0/
0"
1,
1)
0-
0+
0%
0(
1$
1'
#40
1/
1"
1%
1(
#45
