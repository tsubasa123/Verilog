$date
	Mon Apr 27 17:56:16 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module twobitmulTB $end
$var wire 4 ! Out [3:0] $end
$var reg 2 " A [1:0] $end
$var reg 2 # B [1:0] $end
$scope module DUT $end
$var wire 2 $ A [1:0] $end
$var wire 2 % B [1:0] $end
$var wire 4 & Out [3:0] $end
$var wire 1 ' carry $end
$var wire 3 ( inp [2:0] $end
$scope module ha1 $end
$var wire 1 ) A $end
$var wire 1 * B $end
$var reg 1 + Carry $end
$var reg 1 , Sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 - A $end
$var wire 1 ' B $end
$var reg 1 . Carry $end
$var reg 1 / Sum $end
$upscope $end
$upscope $end
$scope task initialize $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0/
0.
0-
0,
0+
0*
0)
b0 (
0'
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#5
1,
1*
b11 !
b11 &
b10 (
b11 #
b11 %
b1 "
b1 $
#10
1/
1-
b110 !
b110 &
b11 (
b10 #
b10 %
b11 "
b11 $
